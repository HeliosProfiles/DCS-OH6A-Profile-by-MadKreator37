# This workflow manually runs to initialise the repo after it has been
# created from the template.  It is expected that the repo name is of the 
# form "DCS-aaaaa-Profile-by-nnnnn" because this provides the author's name and
# also the aircraft.  The Minimum Helios release needs to be set manually in the 
# env: section of this workflow.

name: InitRepo

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  VEHICLE: OH-6A
  VEHICLECOMMONNAME: OH-6A Cayuse
  MINHELIOSRELEASE: 1.6.6110.0005
  PROFILENAME: OH-6A_MadKreator37
  AUTHOR: MadKreator37

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Set outputs
        id: vars
        run: |
          # Set main variables from the repo name
          echo "repoName=${{ github.event.repository.name }}" >> $GITHUB_ENV
          if [[ "${{ github.event.repository.name }}" =~ ^DCS\-(.*)-Profile-by-(.*) ]]; then
          echo "VEHICLE=${BASH_REMATCH[1]}" >> $GITHUB_ENV
          VEHICLE=${BASH_REMATCH[1]}
          VEHICLECOMMONNAME=${BASH_REMATCH[1]}
          echo "VEHICLECOMMONNAME=${BASH_REMATCH[1]}" >> $GITHUB_ENV
          echo "AUTHOR=${BASH_REMATCH[2]}" >> $GITHUB_ENV
          AUTHOR=${BASH_REMATCH[2]}
          echo "PROFILENAME=${BASH_REMATCH[1]}_${BASH_REMATCH[2]}" >> $GITHUB_ENV
          PROFILENAME="${{ env.VEHICLE }}_$AUTHOR"
          else
          echo "Repository name ${{ github.event.repository.name }} is not the correct format for this workflow."
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}
          fi
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "date=$(date +'%d-%b-%Y')" >> $GITHUB_OUTPUT
          echo "actor=${GITHUB_ACTOR}" >> $GITHUB_OUTPUT
          echo "${{ env.VEHICLE }} $AUTHOR"     
      - name: Rename Directories and Files
        id: renameDirs
        run: |
          # rename files and directories
          find . -name "*_aircraft*" -depth -exec bash -c '
          for filename do
          basename=${filename##*/}
          mv "$filename" "${filename%/*}/${basename//_aircraft/${{ env.VEHICLE }}}"
          done
          ' _ {} +
          find . -name "*_author*" -depth -exec bash -c '
          for filename do
          basename=${filename##*/}
          mv "$filename" "${filename%/*}/${basename//_author/${{ env.AUTHOR }}}"
          done
          ' _ {} +
          find . -name "*_vehicle*" -depth -exec bash -c '
          for filename do
          basename=${filename##*/}
          mv "$filename" "${filename%/*}/${basename//_vehicle/${{ env.VEHICLE }}}"
          done
          ' _ {} +
          ls -r
      - uses: EndBug/add-and-commit@v9
        with:
          message: Initialise the Repository
          committer_name: GitHub Actions
          committer_email: actions@github.com
